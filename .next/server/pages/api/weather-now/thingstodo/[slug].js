"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/weather-now/thingstodo/[slug]";
exports.ids = ["pages/api/weather-now/thingstodo/[slug]"];
exports.modules = {

/***/ "./pages/api/weather-now/thingstodo/[slug].js":
/*!****************************************************!*\
  !*** ./pages/api/weather-now/thingstodo/[slug].js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/*\n// FETCHING THE API \n- This API fetches data for Tourism Services Providers and Activities in Iceland.\n- The Data is originally from an API db from Ferðamálastofa, but unfortunately only accessible for us in Icelandic.\n- We therefore hacked the API from VisitIceland.is - which uses the same dataset but in English.\n\n// CHALLENGE OF FILTERING THROUGH the DATA BY CATEGORIES\n- The original data from Ferðamálastofa, gave each ServiceProvider a category value.\n- On the VisitIceland site the data we got had already been filtered, and the object did not have a category property.\n- Therefore 'simple' filtering of all the serviceProviders by category was not possible trough one single api query.\n- We therefore had to retrieve an array of ServiceProviders through a slug with the id=number of each category from the website.\n- We created an object array for the categories, replacing the categoryID with a string='name of category'\n- This category array was then used to create a slug, in page/api - with dynamic routing in NEXTjs\n- This created an api route where we could FETCH the filtered data for each category\nthat is an array of serviceProviders for that specific category.\n- We then Used a graphql query used to filter and access the info for each ServiceProvider and render to the DOM.\n// \n*/ let categories = {\n    'swimming': \"5ec7d096a90548233654d47c\",\n    'museums': \"5ec7d096a90548233654d4aa\",\n    'horse-riding': \"5ec7d096a90548233654d48e\",\n    'geothermal-baths': \"5ec7d096a90548233654d493\",\n    'diving': \"5ec7d096a90548233654d480\",\n    'culinary-experience': \"5ec7d096a90548233654d4a0\",\n    'hiking': \"5ec7d096a90548233654d47d\",\n    'whale-wathching': \"5ec7d096a90548233654d4a6\",\n    'skiing': \"5ec7d096a90548233654d483\",\n    'cave-exploring': \"5ec7d096a90548233654d493\",\n    'glacier-tours': \"5ec7d096a90548233654d4a9\",\n    'kayaking': \"5ec7d096a90548233654d4a5\"\n};\n// the GRAPHQL query from visiticeland - \n// it is possible to control how many objects are fetched with the 'take' variable.\nconst body = {\n    operationName: null,\n    variables: {\n        take: 50,\n        skip: 0,\n        categoryIds: []\n    },\n    query: `\n  query(\n    $categoryIds: [String!]\n    $take: Int\n    $skip: Int\n  ) {\n    ServiceProviders(\n      filter: { categoryIds: $categoryIds }\n      take: $take\n      skip: $skip\n      sort: { isApprovedTourismService: ASC }\n    ) {\n      count\n      ServiceProviders {\n        legalName\n        id: serviceProviderId\n        SSN\n        website\n        photos {\n          alt\n          src: photoUri\n        }\n        translations {\n          description\n          name\n          locale\n        }\n        location {\n          coordinates\n        }\n      }\n    }\n  }\n`\n};\nconst getData = async (category)=>{\n    //body.variables.regionIds[0] = regions[region]\n    body.variables.categoryIds[0] = categories[category];\n    const r = await fetch(\"https://www.visiticeland.com/.netlify/functions/request-proxy\", {\n        \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-US,en;q=0.9,is;q=0.8\",\n            \"cache-control\": \"no-cache\",\n            \"content-type\": \"application/json\",\n            \"pragma\": \"no-cache\",\n            \"sec-ch-ua\": \"\\\"Google Chrome\\\";v=\\\"95\\\", \\\"Chromium\\\";v=\\\"95\\\", \\\";Not A Brand\\\";v=\\\"99\\\"\",\n            \"sec-ch-ua-mobile\": \"?0\",\n            \"sec-ch-ua-platform\": \"\\\"macOS\\\"\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\"\n        },\n        \"referrer\": \"https://www.visiticeland.com/things-to-do/?category=5ec7d096a90548233654d4ba&page=0&region=5ec7d096a90548233654dbb0&subcategory=5ec7d096a90548233654d47c%2C5ec7d096a90548233654d47d\",\n        \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n        \"method\": \"POST\",\n        \"body\": JSON.stringify(body),\n        \"mode\": \"cors\",\n        \"credentials\": \"include\"\n    });\n    const json = await r.json();\n    console.log(JSON.stringify(json));\n    return json;\n};\ngetData();\n// pass in the query for each slug (the [slug].js) creating a api route for each category\nasync function handler(req, res) {\n    const { query: { slug  }  } = req;\n    const json = await getData(slug);\n    res.status(200).json(json);\n}; /* let regions = {\n  capital: \"5ec7d096a90548233654dbb2\",\n  west: \"5ec7d096a90548233654dbaf\",\n  east: \"5ec7d096a90548233654dbb0\",\n  south: \"5ec7d096a90548233654dbb5\",\n  north: \"5ec7d096a90548233654dbb3\",\n  reykjanes: \"5ec7d096a90548233654dbb4\",\n  westfjords: \"5ec7d096a90548233654dbb6\"\n} */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/api/weather-now/thingstodo/[slug].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/weather-now/thingstodo/[slug].js"));
module.exports = __webpack_exports__;

})();